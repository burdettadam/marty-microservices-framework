# Testing environment configuration
# Used for automated testing, integration tests, and CI/CD pipelines

# Testing security settings (balanced for testing)
security:
  grpc_tls:
    enabled: true
    mtls: true
    require_client_auth: true
    verify_hostname: false  # May use test certificates
    server_cert: "/etc/test-certs/server/tls.crt"
    server_key: "/etc/test-certs/server/tls.key"
    client_ca: "/etc/test-certs/ca/ca.crt"
    client_cert: "/etc/test-certs/client/tls.crt"
    client_key: "/etc/test-certs/client/tls.key"

  auth:
    required: true
    jwt:
      enabled: true
      algorithm: "HS256"
      secret: "test_jwt_secret_for_testing_environment_only"
    api_key_enabled: true
    client_cert:
      enabled: true
      extract_subject: true

  authz:
    enabled: true
    policy_config: "/etc/test-config/policy.yaml"
    default_action: "deny"

# Testing logging (detailed for debugging test failures)
logging:
  level: DEBUG
  format: "%(asctime)s - %(name)s - %(levelname)s - %(funcName)s:%(lineno)d - %(message)s"
  handlers:
    - console
    - file
  file: "/tmp/test.log"
  max_bytes: 52428800  # 50MB
  backup_count: 3

# Testing monitoring (lightweight)
monitoring:
  enabled: true
  metrics_port: 9090
  health_check_port: 8080
  prometheus_enabled: true
  tracing_enabled: true
  jaeger_endpoint: "http://jaeger:14268/api/traces"

# Testing database patterns (using test databases)
database:
  # Default test database configuration
  test_db:
    host: "${TEST_DB_HOST:-postgres-test}"
    port: "${TEST_DB_PORT:-5432}"
    database: "${SERVICE_NAME}_test"
    username: "test_user"
    password: "test_password"
    pool_size: 5
    max_overflow: 10
    pool_timeout: 30
    pool_recycle: 3600
    ssl_mode: "disable"  # Simplified for testing

  # In-memory test database for unit tests
  memory_db:
    driver: "sqlite"
    database: ":memory:"
    pool_size: 1
    max_overflow: 0

  # Integration test database
  integration_test_db:
    host: "${INTEGRATION_DB_HOST:-postgres-integration}"
    port: "${INTEGRATION_DB_PORT:-5432}"
    database: "${SERVICE_NAME}_integration"
    username: "integration_user"
    password: "integration_password"
    pool_size: 10
    max_overflow: 20
    pool_timeout: 30
    pool_recycle: 3600
    ssl_mode: "disable"

# Testing service configurations (optimized for test execution)
services:
  user_service:
    max_connections: 50
    request_timeout: 5  # Fast timeouts for testing
    jwt_expiry_hours: 1
    password_hash_rounds: 4  # Faster hashing for tests
    enable_email_verification: false
    debug_mode: true
    mock_external_services: true
    test_mode: true

  order_service:
    max_concurrent_orders: 25
    order_timeout_minutes: 5
    inventory_check_enabled: true
    payment_timeout_seconds: 30
    debug_mode: true
    test_mode: true
    mock_payment_service: true

  payment_service:
    max_transaction_amount: 5000
    fraud_check_enabled: true
    pci_compliance_mode: false  # Relaxed for testing
    debug_mode: true
    test_mode: true
    use_mock_payment_gateway: true
    enable_test_cards: true

  notification_service:
    max_queue_size: 500
    retry_attempts: 2
    batch_size: 50
    rate_limit_per_minute: 300
    debug_mode: true
    test_mode: true
    use_mock_email_service: true

# Testing resilience (fast failure for quick test feedback)
resilience:
  circuit_breaker:
    failure_threshold: 3
    recovery_timeout: 10
    half_open_max_calls: 2

  retry_policy:
    max_attempts: 2
    backoff_multiplier: 1.0  # No backoff for faster tests
    max_delay_seconds: 1

# Testing-specific configurations
test:
  cleanup_after_test: true
  reset_database: true
  mock_external_apis: true
  fast_mode: true
  parallel_execution: true

  # Test data configurations
  fixtures:
    load_test_data: true
    test_users: 10
    test_orders: 25
    test_payments: 15

  # Performance test settings
  performance:
    load_test_duration: 60  # seconds
    concurrent_users: 10
    ramp_up_time: 10

# Test environment hosts
hosts:
  user_service: "user-service-test"
  order_service: "order-service-test"
  payment_service: "payment-service-test"
  notification_service: "notification-service-test"
  api_gateway: "api-gateway-test"

# External service mocks for testing
mocks:
  payment_gateway:
    enabled: true
    response_delay_ms: 100
    success_rate: 0.95

  email_service:
    enabled: true
    response_delay_ms: 50
    success_rate: 0.98

  sms_service:
    enabled: true
    response_delay_ms: 200
    success_rate: 0.97
