# Production environment configuration
# Inherits from base configuration with production-specific overrides

# Production security settings (MAXIMUM SECURITY ENFORCED)
security:
  grpc_tls:
    enabled: true  # ALWAYS enabled in production
    mtls: true
    require_client_auth: true
    verify_hostname: true
    server_cert: "/etc/tls/server/tls.crt"
    server_key: "/etc/tls/server/tls.key"
    client_ca: "/etc/tls/ca/ca.crt"
    client_cert: "/etc/tls/client/tls.crt"
    client_key: "/etc/tls/client/tls.key"

  auth:
    required: true  # ALWAYS required in production
    jwt:
      enabled: true
      algorithm: "RS256"  # More secure algorithm for production
      secret: "${JWT_SECRET}"  # Must be set via secret management
    api_key_enabled: true
    client_cert:
      enabled: true
      extract_subject: true

  authz:
    enabled: true  # ALWAYS enabled in production
    policy_config: "/etc/config/policy.yaml"
    default_action: "deny"

# Production logging (structured and secure)
logging:
  level: INFO
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  handlers:
    - console
    - file
    - syslog
  file: "/var/log/app/service.log"
  max_bytes: 104857600  # 100MB
  backup_count: 10

# Production monitoring (comprehensive)
monitoring:
  enabled: true
  metrics_port: 9090
  health_check_port: 8080
  prometheus_enabled: true
  tracing_enabled: true
  jaeger_endpoint: "${JAEGER_ENDPOINT}"

# Production database connections (using managed database services)
database:
  user_service:
    host: "${USER_DB_HOST}"
    port: "${USER_DB_PORT:-5432}"
    database: "user_service_prod"
    username: "${USER_DB_USERNAME}"
    password: "${USER_DB_PASSWORD}"
    pool_size: 20
    max_overflow: 40
    pool_timeout: 30
    pool_recycle: 3600
    ssl_mode: "require"
    connection_timeout: 10

  order_service:
    host: "${ORDER_DB_HOST}"
    port: "${ORDER_DB_PORT:-5432}"
    database: "order_service_prod"
    username: "${ORDER_DB_USERNAME}"
    password: "${ORDER_DB_PASSWORD}"
    pool_size: 20
    max_overflow: 40
    pool_timeout: 30
    pool_recycle: 3600
    ssl_mode: "require"
    connection_timeout: 10

  payment_service:
    host: "${PAYMENT_DB_HOST}"
    port: "${PAYMENT_DB_PORT:-5432}"
    database: "payment_service_prod"
    username: "${PAYMENT_DB_USERNAME}"
    password: "${PAYMENT_DB_PASSWORD}"
    pool_size: 30  # Higher for payment service
    max_overflow: 60
    pool_timeout: 20
    pool_recycle: 1800
    ssl_mode: "require"
    connection_timeout: 5

  notification_service:
    host: "${NOTIFICATION_DB_HOST}"
    port: "${NOTIFICATION_DB_PORT:-5432}"
    database: "notification_service_prod"
    username: "${NOTIFICATION_DB_USERNAME}"
    password: "${NOTIFICATION_DB_PASSWORD}"
    pool_size: 15
    max_overflow: 30
    pool_timeout: 30
    pool_recycle: 3600
    ssl_mode: "require"
    connection_timeout: 10

# Production service configurations (optimized for performance and reliability)
services:
  user_service:
    max_connections: 500
    request_timeout: 10
    jwt_expiry_hours: 2  # Shorter expiry for security
    password_hash_rounds: 14  # More secure hashing
    enable_email_verification: true
    rate_limit_per_minute: 100
    enable_audit_logging: true
    session_timeout_minutes: 30

  order_service:
    max_concurrent_orders: 200
    order_timeout_minutes: 10
    inventory_check_enabled: true
    payment_timeout_seconds: 120
    enable_order_tracking: true
    fraud_detection_enabled: true
    auto_cancel_timeout_hours: 24

  payment_service:
    max_transaction_amount: 50000
    fraud_check_enabled: true
    pci_compliance_mode: true
    encryption_key_rotation_days: 7  # More frequent rotation
    transaction_timeout_seconds: 30
    require_3d_secure: true
    enable_transaction_monitoring: true
    max_daily_transaction_limit: 100000

  notification_service:
    max_queue_size: 10000
    retry_attempts: 5
    batch_size: 500
    rate_limit_per_minute: 1000
    enable_delivery_tracking: true
    template_caching_enabled: true
    priority_queue_enabled: true

# Production resilience (robust error handling)
resilience:
  circuit_breaker:
    failure_threshold: 10
    recovery_timeout: 120
    half_open_max_calls: 5

  retry_policy:
    max_attempts: 5
    backoff_multiplier: 2.0
    max_delay_seconds: 60

# Production-specific additional configurations
cache:
  enabled: true
  redis_url: "${REDIS_URL}"
  default_ttl: 3600
  max_connections: 20

messaging:
  kafka_brokers: "${KAFKA_BROKERS}"
  producer_acks: "all"
  retries: 3
  batch_size: 16384
  enable_idempotence: true

# Resource limits
resources:
  memory_limit: "2Gi"
  cpu_limit: "1000m"
  memory_request: "1Gi"
  cpu_request: "500m"

# Health checks
health:
  startup_probe:
    initial_delay_seconds: 30
    period_seconds: 10
    timeout_seconds: 5
    failure_threshold: 6

  liveness_probe:
    initial_delay_seconds: 60
    period_seconds: 30
    timeout_seconds: 5
    failure_threshold: 3

  readiness_probe:
    initial_delay_seconds: 10
    period_seconds: 5
    timeout_seconds: 3
    failure_threshold: 2

# Production plugin configuration
plugins:
  enabled: true
  auto_discovery: false  # Explicit plugin loading in production

  # Production plugin loading (strict)
  loading:
    parallel: true
    timeout_seconds: 15  # Strict timeout
    retry_attempts: 1  # Fail fast in production

  # Production plugins - explicitly enabled
  default_plugins:
    - name: "production_payment"
      enabled: true
      priority: 100
      required: true  # Service fails to start if plugin fails

  # Production security (strict)
  security:
    require_signature: true  # Require signed plugins
    allowed_sources:
      - "official"
    sandboxing:
      enabled: true  # Enable sandboxing
      resource_limits:
        memory_mb: 256
        cpu_percent: 30
        network_connections: 100
