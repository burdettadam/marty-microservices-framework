apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: framework-grpc-server
  namespace: microservice-framework
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: microservice-framework
  port: grpc
  proxyProtocol: "gRPC"
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: framework-http-server
  namespace: microservice-framework
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: microservice-framework
  port: http
  proxyProtocol: "HTTP/2"
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: framework-metrics-server
  namespace: microservice-framework
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/part-of: microservice-framework
  port: metrics
  proxyProtocol: "HTTP/1.1"
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: api-gateway-server
  namespace: microservice-framework
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  port: 8080
  proxyProtocol: "HTTP/2"
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: api-gateway-grpc-server
  namespace: microservice-framework
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  port: 9090
  proxyProtocol: "gRPC"
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: template-service-server
  namespace: microservice-framework
spec:
  podSelector:
    matchLabels:
      app: template-service
  port: 8080
  proxyProtocol: "HTTP/2"
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: template-service-grpc-server
  namespace: microservice-framework
spec:
  podSelector:
    matchLabels:
      app: template-service
  port: 9090
  proxyProtocol: "gRPC"
---
# Observability servers
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: prometheus-server
  namespace: microservice-framework
spec:
  podSelector:
    matchLabels:
      app: prometheus
  port: 9090
  proxyProtocol: "HTTP/1.1"
---
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: grafana-server
  namespace: microservice-framework
spec:
  podSelector:
    matchLabels:
      app: grafana
  port: 3000
  proxyProtocol: "HTTP/1.1"
