---
# Advanced Retry Policies with Exponential Backoff
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: retry-policy-payment
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: retry
spec:
  hosts:
  - payment-service.microservice-framework.svc.cluster.local
  http:
  - match:
    - uri:
        prefix: "/api/v1/payments"
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
      retryRemoteLocalities: true
    timeout: 30s
    route:
    - destination:
        host: payment-service.microservice-framework.svc.cluster.local
        subset: v1
      weight: 100
---
# Retry Policy for External APIs with Exponential Backoff
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: retry-policy-external
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: retry
spec:
  hosts:
  - external-api.example.com
  http:
  - match:
    - uri:
        prefix: "/"
    retries:
      attempts: 5
      perTryTimeout: 5s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream,reset
      retryRemoteLocalities: false
    timeout: 25s
    route:
    - destination:
        host: external-api.example.com
---
# Database Query Retry Policy
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: retry-policy-database
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: retry
spec:
  hosts:
  - postgresql.database.svc.cluster.local
  tcp:
  - match:
    - port: 5432
    route:
    - destination:
        host: postgresql.database.svc.cluster.local
        port:
          number: 5432
  http:
  - retries:
      attempts: 2
      perTryTimeout: 15s
      retryOn: 5xx,connect-failure,refused-stream
    timeout: 45s
    route:
    - destination:
        host: postgresql.database.svc.cluster.local
---
# gRPC Service Retry Policy
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: retry-policy-grpc
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: retry
    marty.io/protocol: grpc
spec:
  hosts:
  - user-service.microservice-framework.svc.cluster.local
  http:
  - match:
    - headers:
        content-type:
          regex: "application/grpc.*"
    retries:
      attempts: 4
      perTryTimeout: 8s
      retryOn: cancelled,deadline-exceeded,internal,resource-exhausted,unavailable
    timeout: 32s
    route:
    - destination:
        host: user-service.microservice-framework.svc.cluster.local
        port:
          number: 50051
---
# Critical Path Retry Policy (Aggressive)
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: retry-policy-critical
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: retry
    marty.io/priority: critical
spec:
  hosts:
  - auth-service.microservice-framework.svc.cluster.local
  http:
  - match:
    - uri:
        prefix: "/api/v1/auth"
    retries:
      attempts: 5
      perTryTimeout: 3s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
      retryRemoteLocalities: true
    timeout: 15s
    route:
    - destination:
        host: auth-service.microservice-framework.svc.cluster.local
---
# Background Task Retry Policy (Conservative)
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: retry-policy-background
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: retry
    marty.io/priority: background
spec:
  hosts:
  - notification-service.microservice-framework.svc.cluster.local
  http:
  - match:
    - uri:
        prefix: "/api/v1/notifications"
    retries:
      attempts: 2
      perTryTimeout: 20s
      retryOn: 5xx,gateway-error
    timeout: 60s
    route:
    - destination:
        host: notification-service.microservice-framework.svc.cluster.local
