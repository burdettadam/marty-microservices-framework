---
# Rate Limiting with EnvoyFilter
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: rate-limit-payment-service
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: rate-limiting
spec:
  workloadSelector:
    labels:
      app: payment-service
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          value:
            stat_prefix: payment_rate_limiter
            token_bucket:
              max_tokens: 100
              tokens_per_fill: 50
              fill_interval: 60s
            filter_enabled:
              runtime_key: payment_rate_limit_enabled
              default_value:
                numerator: 100
                denominator: HUNDRED
            filter_enforced:
              runtime_key: payment_rate_limit_enforced
              default_value:
                numerator: 100
                denominator: HUNDRED
            response_headers_to_add:
            - append: false
              header:
                key: x-local-rate-limit
                value: 'true'
---
# Global Rate Limiting for API Gateway
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: rate-limit-api-gateway
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: rate-limiting
spec:
  workloadSelector:
    labels:
      app: api-gateway
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          value:
            stat_prefix: api_gateway_rate_limiter
            token_bucket:
              max_tokens: 1000
              tokens_per_fill: 500
              fill_interval: 60s
            filter_enabled:
              default_value:
                numerator: 100
                denominator: HUNDRED
            filter_enforced:
              default_value:
                numerator: 100
                denominator: HUNDRED
            request_headers_to_add_on_pass:
            - append: false
              header:
                key: x-ratelimit-remaining
                value: '%DYNAMIC_METADATA(envoy.common:ratelimit:remaining)%'
---
# User-Based Rate Limiting
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: rate-limit-per-user
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: rate-limiting
spec:
  workloadSelector:
    labels:
      app: user-service
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          value:
            stat_prefix: user_rate_limiter
            token_bucket:
              max_tokens: 50
              tokens_per_fill: 25
              fill_interval: 60s
            filter_enabled:
              default_value:
                numerator: 100
                denominator: HUNDRED
            filter_enforced:
              default_value:
                numerator: 100
                denominator: HUNDRED
            descriptors:
            - entries:
              - key: user_id
                value: "%REQ(x-user-id)%"
            local_rate_limit_per_downstream_connection: false
---
# External API Rate Limiting
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: rate-limit-external-api
  namespace: microservice-framework
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: rate-limiting
spec:
  hosts:
  - external-api.example.com
  http:
  - match:
    - uri:
        prefix: "/"
    headers:
      request:
        add:
          x-rate-limit-client: "marty-msf"
    retries:
      attempts: 2
      perTryTimeout: 5s
      retryOn: 5xx,gateway-error,connect-failure,refused-stream
    timeout: 10s
    route:
    - destination:
        host: external-api.example.com
---
# Development Environment Rate Limiting (Relaxed)
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: rate-limit-dev-environment
  namespace: microservice-framework-dev
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/environment: development
    marty.io/policy-type: rate-limiting
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.filters.network.http_connection_manager"
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.local_ratelimit
        typed_config:
          "@type": type.googleapis.com/udpa.type.v1.TypedStruct
          type_url: type.googleapis.com/envoy.extensions.filters.http.local_ratelimit.v3.LocalRateLimit
          value:
            stat_prefix: dev_rate_limiter
            token_bucket:
              max_tokens: 10000
              tokens_per_fill: 5000
              fill_interval: 60s
            filter_enabled:
              default_value:
                numerator: 50
                denominator: HUNDRED
            filter_enforced:
              default_value:
                numerator: 25
                denominator: HUNDRED
