apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: phase2-microservices-routing
  namespace: microservices-prod
  labels:
    app.kubernetes.io/name: virtual-service
    app.kubernetes.io/component: traffic-management
    marty.framework/phase: "phase2"
spec:
  hosts:
  - "api.phase2.example.com"
  - "*.microservices.cluster.local"
  gateways:
  - phase2-microservices-gateway
  - mesh
  http:
  # API Gateway routing
  - match:
    - uri:
        prefix: "/api/v2/"
    route:
    - destination:
        host: api-gateway.microservices-prod.svc.cluster.local
        port:
          number: 8080
      weight: 90
    - destination:
        host: api-gateway-canary.microservices-prod.svc.cluster.local
        port:
          number: 8080
      weight: 10
    headers:
      request:
        add:
          x-phase2-infrastructure: "enabled"
    fault:
      delay:
        percentage:
          value: 0.1
        fixedDelay: 100ms
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: 5xx,reset,connect-failure,refused-stream

  # Health check routing
  - match:
    - uri:
        exact: "/health"
    route:
    - destination:
        host: api-gateway.microservices-prod.svc.cluster.local
        port:
          number: 8080
    timeout: 5s

  # Metrics endpoint
  - match:
    - uri:
        prefix: "/metrics"
    route:
    - destination:
        host: prometheus.monitoring.svc.cluster.local
        port:
          number: 9090
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: phase2-infrastructure-routing
  namespace: microservices-prod
  labels:
    app.kubernetes.io/name: virtual-service
    app.kubernetes.io/component: infrastructure-traffic
    marty.framework/phase: "phase2"
spec:
  hosts:
  - redis.microservices-prod.svc.cluster.local
  - rabbitmq.microservices-prod.svc.cluster.local
  - postgresql.microservices-prod.svc.cluster.local
  tcp:
  # Redis traffic management
  - match:
    - port: 6379
    route:
    - destination:
        host: redis.microservices-prod.svc.cluster.local
        port:
          number: 6379

  # RabbitMQ traffic management
  - match:
    - port: 5672
    route:
    - destination:
        host: rabbitmq.microservices-prod.svc.cluster.local
        port:
          number: 5672

  # PostgreSQL traffic management
  - match:
    - port: 5432
    route:
    - destination:
        host: postgresql.microservices-prod.svc.cluster.local
        port:
          number: 5432
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: phase2-microservices-destination
  namespace: microservices-prod
  labels:
    app.kubernetes.io/name: destination-rule
    app.kubernetes.io/component: traffic-policy
    marty.framework/phase: "phase2"
spec:
  host: "*.microservices-prod.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30s
        keepAlive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 1000
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
        minHealthPercent: 50
    circuitBreaker:
      consecutiveGatewayErrors: 5
      consecutiveServerErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 50
    loadBalancer:
      simple: LEAST_CONN
      consistentHash:
        httpHeaderName: "x-user-id"
  subsets:
  - name: v1
    labels:
      version: v1
    trafficPolicy:
      circuitBreaker:
        consecutiveGatewayErrors: 3
  - name: v2
    labels:
      version: v2
    trafficPolicy:
      circuitBreaker:
        consecutiveGatewayErrors: 5
  - name: canary
    labels:
      version: canary
    trafficPolicy:
      circuitBreaker:
        consecutiveGatewayErrors: 2
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: phase2-infrastructure-destination
  namespace: microservices-prod
  labels:
    app.kubernetes.io/name: destination-rule
    app.kubernetes.io/component: infrastructure-policy
    marty.framework/phase: "phase2"
spec:
  host: redis.microservices-prod.svc.cluster.local
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 50
        connectTimeout: 10s
        keepAlive:
          time: 3600s
          interval: 30s
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: phase2-rabbitmq-destination
  namespace: microservices-prod
  labels:
    app.kubernetes.io/name: destination-rule
    app.kubernetes.io/component: messaging-policy
    marty.framework/phase: "phase2"
spec:
  host: rabbitmq.microservices-prod.svc.cluster.local
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 20
        connectTimeout: 15s
        keepAlive:
          time: 1800s
          interval: 60s
