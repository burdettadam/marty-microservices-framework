# Copy all Istio configurations to k8s directory structure
apiVersion: v1
kind: Namespace
metadata:
  name: microservice-framework
  labels:
    istio-injection: enabled
    name: microservice-framework
---
# Include the existing Istio operator configuration
apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  name: microservices-framework-istio
  namespace: istio-system
spec:
  values:
    global:
      meshID: microservices-mesh
      multiCluster:
        clusterName: framework-cluster
      network: framework-network
      # Enable observability integration
      tracer:
        zipkin:
          address: jaeger-collector.observability:9411
      proxy:
        tracer: "zipkin"
  components:
    pilot:
      k8s:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        env:
          # Enable advanced features
          PILOT_ENABLE_WORKLOAD_ENTRY_AUTOREGISTRATION: true
          PILOT_ENABLE_CROSS_CLUSTER_WORKLOAD_ENTRY: true
          PILOT_ENABLE_REQUEST_ID_VALIDATION: true
          PILOT_TRACE_SAMPLING: 1.0
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        service:
          type: LoadBalancer
        overlays:
        - apiVersion: v1
          kind: Service
          name: istio-ingressgateway
          patches:
          - path: spec.ports[-1]
            value:
              name: status-port
              port: 15021
              protocol: TCP
              targetPort: 15021
    egressGateways:
    - name: istio-egressgateway
      enabled: true
      k8s:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
  meshConfig:
    defaultConfig:
      # Enhanced observability
      proxyStatsMatcher:
        inclusionRegexps:
        - ".*outlier_detection.*"
        - ".*circuit_breakers.*"
        - ".*upstream_rq_retry.*"
        - ".*upstream_rq_pending.*"
        - ".*_cx_.*"
        - ".*grpc.*"
        - ".*http.*"
      concurrency: 2
      # Enable tracing
      tracing:
        sampling: 100.0
      # Improved logging
      proxyMetadata:
        PILOT_ENABLE_GRPC_BRIDGE_STATS: "true"
    # Automatic mTLS configuration
    defaultProviders:
      metrics:
      - prometheus
      tracing:
      - jaeger
    extensionProviders:
    - name: prometheus
      prometheus:
        configOverride:
          metric_relabeling_configs:
          - source_labels: [__name__]
            regex: 'istio_.*'
            action: keep
          - source_labels: [__name__]
            regex: 'envoy_.*'
            action: keep
    - name: jaeger
      envoyOtelAls:
        service: jaeger-collector.observability
        port: 14250
    # Security settings
    trustDomain: cluster.local
    certificateSigningRequests:
    - secretName: dns.example1-service-account
      dnsNames:
      - example1.example.com
---
apiVersion: v1
kind: Namespace
metadata:
  name: istio-system
  labels:
    istio-injection: disabled
    name: istio-system
