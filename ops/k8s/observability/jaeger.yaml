apiVersion: v1
kind: ConfigMap
metadata:
  name: jaeger-config
  namespace: observability
data:
  jaeger.yaml: |
    storage:
      type: elasticsearch
      elasticsearch:
        server-urls: http://elasticsearch:9200
        index-prefix: jaeger
        num-shards: 3
        num-replicas: 1
    query:
      base-path: /jaeger
    collector:
      grpc-port: 14250
      http-port: 14268
      zipkin:
        http-port: 9411
    agent:
      processors:
        jaeger-compact:
          server-host-port: 6831
        jaeger-binary:
          server-host-port: 6832
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger
  namespace: observability
  labels:
    app: jaeger
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
  template:
    metadata:
      labels:
        app: jaeger
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.52
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: QUERY_BASE_PATH
          value: "/jaeger"
        - name: METRICS_STORAGE_TYPE
          value: prometheus
        - name: PROMETHEUS_SERVER_URL
          value: http://prometheus:9090
        ports:
        - name: query-http
          containerPort: 16686
          protocol: TCP
        - name: collector-grpc
          containerPort: 14250
          protocol: TCP
        - name: collector-http
          containerPort: 14268
          protocol: TCP
        - name: zipkin
          containerPort: 9411
          protocol: TCP
        - name: agent-compact
          containerPort: 6831
          protocol: UDP
        - name: agent-binary
          containerPort: 6832
          protocol: UDP
        - name: admin-http
          containerPort: 14269
          protocol: TCP
        - name: otlp-grpc
          containerPort: 4317
          protocol: TCP
        - name: otlp-http
          containerPort: 4318
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 256Mi
        readinessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 30
          periodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger
  namespace: observability
  labels:
    app: jaeger
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "14269"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: query-http
    port: 16686
    targetPort: 16686
    protocol: TCP
  - name: collector-grpc
    port: 14250
    targetPort: 14250
    protocol: TCP
  - name: collector-http
    port: 14268
    targetPort: 14268
    protocol: TCP
  - name: zipkin
    port: 9411
    targetPort: 9411
    protocol: TCP
  - name: agent-compact
    port: 6831
    targetPort: 6831
    protocol: UDP
  - name: agent-binary
    port: 6832
    targetPort: 6832
    protocol: UDP
  - name: admin-http
    port: 14269
    targetPort: 14269
    protocol: TCP
  - name: otlp-grpc
    port: 4317
    targetPort: 4317
    protocol: TCP
  - name: otlp-http
    port: 4318
    targetPort: 4318
    protocol: TCP
  selector:
    app: jaeger
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-ui
  namespace: observability
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - host: observability.local
    http:
      paths:
      - path: /jaeger(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: jaeger
            port:
              number: 16686
