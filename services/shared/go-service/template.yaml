name: "Go Service"
description: "Enterprise-grade Go microservice with Gin, security, monitoring, and cloud-native features"
category: "microservice"
language: "go"
framework: "gin"
version: "1.0.0"

variables:
  service_name:
    type: "string"
    description: "Name of the service"
    default: "my-go-service"

  service_description:
    type: "string"
    description: "Description of the service"
    default: "A Go microservice"

  module_name:
    type: "string"
    description: "Go module name"
    default: "github.com/company/my-go-service"

  port:
    type: "integer"
    description: "Service port"
    default: 8080

  author:
    type: "string"
    description: "Author name"
    default: "Developer"

  include_auth:
    type: "boolean"
    description: "Include JWT authentication"
    default: true

  include_database:
    type: "boolean"
    description: "Include database support (PostgreSQL with GORM)"
    default: true

  include_redis:
    type: "boolean"
    description: "Include Redis for caching"
    default: true

files:
  - src: "go.mod"
    dest: "go.mod"
  - src: "main.go"
    dest: "main.go"
  - src: "Dockerfile"
    dest: "Dockerfile"
  - src: "README.md"
    dest: "README.md"
  - src: "cmd/"
    dest: "cmd/"
  - src: "internal/"
    dest: "internal/"
  - src: "pkg/"
    dest: "pkg/"

hooks:
  post_create:
    - "go mod tidy"
    - "go build -o bin/{{ service_name }} ./cmd/server"
    - "echo 'Go service created successfully!'"
    - "echo 'Run: cd {{ service_name }} && go run ./cmd/server'"
