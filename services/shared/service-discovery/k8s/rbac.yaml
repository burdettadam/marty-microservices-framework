apiVersion: v1
kind: ServiceAccount
metadata:
  name: service-discovery
  namespace: marty-framework
  labels:
    app: service-discovery
    component: infrastructure
    version: v1
    part-of: marty-framework
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: service-discovery
  labels:
    app: service-discovery
    component: infrastructure
    version: v1
    part-of: marty-framework
rules:
# Service discovery permissions
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]

# Pod information for health checks
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

# Node information for load balancing
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]

# ConfigMap and Secret access for configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]

# Custom Resource Definitions for advanced service discovery
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch"]

# Service Monitor for Prometheus integration
- apiGroups: ["monitoring.coreos.com"]
  resources: ["servicemonitors"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Ingress resources for external service discovery
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get", "list", "watch"]

# Gateway API resources
- apiGroups: ["gateway.networking.k8s.io"]
  resources: ["gateways", "httproutes", "tcproutes", "udproutes"]
  verbs: ["get", "list", "watch"]

# Istio service mesh integration
- apiGroups: ["networking.istio.io"]
  resources: ["virtualservices", "destinationrules", "serviceentries"]
  verbs: ["get", "list", "watch"]

# Linkerd service mesh integration
- apiGroups: ["policy.linkerd.io"]
  resources: ["servers", "serverauthorizations"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: service-discovery
  labels:
    app: service-discovery
    component: infrastructure
    version: v1
    part-of: marty-framework
subjects:
- kind: ServiceAccount
  name: service-discovery
  namespace: marty-framework
roleRef:
  kind: ClusterRole
  name: service-discovery
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: service-discovery
  namespace: marty-framework
  labels:
    app: service-discovery
    component: infrastructure
    version: v1
    part-of: marty-framework
rules:
# Local namespace management
- apiGroups: [""]
  resources: ["services", "endpoints", "pods", "configmaps"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# Event creation for monitoring
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

# Lease management for leader election
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: service-discovery
  namespace: marty-framework
  labels:
    app: service-discovery
    component: infrastructure
    version: v1
    part-of: marty-framework
subjects:
- kind: ServiceAccount
  name: service-discovery
  namespace: marty-framework
roleRef:
  kind: Role
  name: service-discovery
  apiGroup: rbac.authorization.k8s.io

---
# Additional role for cross-namespace service discovery (optional)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: service-discovery-cross-namespace
  labels:
    app: service-discovery
    component: infrastructure
    version: v1
    part-of: marty-framework
rules:
# Cross-namespace service discovery
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
  resourceNames: []

# Cross-namespace pod health checks
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
# Bind cross-namespace role only if needed
# apiVersion: rbac.authorization.k8s.io/v1
# kind: ClusterRoleBinding
# metadata:
#   name: service-discovery-cross-namespace
#   labels:
#     app: service-discovery
#     component: infrastructure
#     version: v1
#     part-of: marty-framework
# subjects:
# - kind: ServiceAccount
#   name: service-discovery
#   namespace: marty-framework
# roleRef:
#   kind: ClusterRole
#   name: service-discovery-cross-namespace
#   apiGroup: rbac.authorization.k8s.io
