apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.service.name }}-enterprise-secrets
  namespace: {{ .Values.namespace | default "microservices" }}
  labels:
    app.kubernetes.io/name: {{ .Values.service.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: secrets
    marty.framework/phase: "phase2"
type: Opaque
data:
  # Database Credentials
  database_username: {{ .Values.secrets.database.username | b64enc }}
  database_password: {{ .Values.secrets.database.password | b64enc }}
  database_url: {{ printf "postgresql+asyncpg://%s:%s@%s:%s/%s_db" .Values.secrets.database.username .Values.secrets.database.password (.Values.database.host | default "postgresql") (.Values.database.port | default "5432") .Values.service.name | b64enc }}

  # Redis Credentials
  redis_password: {{ .Values.secrets.redis.password | default "" | b64enc }}
  redis_url: {{ if .Values.secrets.redis.password }}{{ printf "redis://:%s@redis:6379" .Values.secrets.redis.password | b64enc }}{{ else }}{{ "redis://redis:6379" | b64enc }}{{ end }}

  # RabbitMQ Credentials
  rabbitmq_username: {{ .Values.secrets.rabbitmq.username | default "guest" | b64enc }}
  rabbitmq_password: {{ .Values.secrets.rabbitmq.password | default "guest" | b64enc }}
  rabbitmq_url: {{ printf "amqp://%s:%s@rabbitmq:5672/" (.Values.secrets.rabbitmq.username | default "guest") (.Values.secrets.rabbitmq.password | default "guest") | b64enc }}

  # JWT Secrets for API Gateway
  jwt_secret_key: {{ .Values.secrets.jwt.secretKey | b64enc }}
  jwt_algorithm: {{ .Values.secrets.jwt.algorithm | default "HS256" | b64enc }}

  # External API Keys
  external_api_key: {{ .Values.secrets.external.apiKey | default "" | b64enc }}

  # Encryption Keys for SecretManager
  encryption_key: {{ .Values.secrets.encryption.key | b64enc }}

  # Monitoring Credentials
  prometheus_username: {{ .Values.secrets.monitoring.prometheus.username | default "admin" | b64enc }}
  prometheus_password: {{ .Values.secrets.monitoring.prometheus.password | default "admin" | b64enc }}
  grafana_admin_password: {{ .Values.secrets.monitoring.grafana.adminPassword | b64enc }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.service.name }}-tls-certs
  namespace: {{ .Values.namespace | default "microservices" }}
  labels:
    app.kubernetes.io/name: {{ .Values.service.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: tls
type: kubernetes.io/tls
data:
  {{- if .Values.tls.cert }}
  tls.crt: {{ .Values.tls.cert | b64enc }}
  {{- else }}
  tls.crt: {{ include "defaultTLSCert" . | b64enc }}
  {{- end }}
  {{- if .Values.tls.key }}
  tls.key: {{ .Values.tls.key | b64enc }}
  {{- else }}
  tls.key: {{ include "defaultTLSKey" . | b64enc }}
  {{- end }}
