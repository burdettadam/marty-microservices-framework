apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-versioning-service
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-versioning-service
  template:
    metadata:
      labels:
        app: api-versioning-service
        component: infrastructure
        framework: marty
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8060"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api-versioning-service
        image: marty/api-versioning-service:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8060
          name: http
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: SERVICE_NAME
          value: "api-versioning-service"
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8060"
        - name: WORKERS
          value: "4"
        - name: VERSIONING__STRATEGY
          value: "url_path"
        - name: VERSIONING__DEFAULT_VERSION
          value: "v1"
        - name: CONTRACTS__STORAGE_BACKEND
          value: "postgresql"
        - name: STORAGE__POSTGRES_HOST
          valueFrom:
            configMapKeyRef:
              name: api-versioning-config
              key: postgres-host
        - name: STORAGE__POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: api-versioning-config
              key: postgres-database
        - name: STORAGE__POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: api-versioning-secrets
              key: postgres-username
        - name: STORAGE__POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-versioning-secrets
              key: postgres-password
        - name: STORAGE__REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: api-versioning-config
              key: redis-url
        - name: SECURITY__JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: api-versioning-secrets
              key: jwt-secret-key
        - name: SECURITY__REQUIRE_HTTPS
          value: "true"
        - name: MONITORING__TRACING_ENABLED
          value: "true"
        - name: MONITORING__JAEGER_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: api-versioning-config
              key: jaeger-endpoint
        - name: PERFORMANCE__ENABLE_CACHING
          value: "true"
        - name: PERFORMANCE__CACHE_BACKEND
          value: "redis"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8060
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8060
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 1000
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      serviceAccountName: api-versioning-service
      securityContext:
        fsGroup: 1000

---
apiVersion: v1
kind: Service
metadata:
  name: api-versioning-service
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8060
    protocol: TCP
    name: http
  selector:
    app: api-versioning-service

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-versioning-service
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-versioning-config
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty
data:
  postgres-host: "postgresql.marty-framework.svc.cluster.local"
  postgres-port: "5432"
  postgres-database: "api_contracts"
  redis-url: "redis://redis.marty-framework.svc.cluster.local:6379/0"
  jaeger-endpoint: "http://jaeger-collector.monitoring.svc.cluster.local:14268/api/traces"
  log-level: "INFO"
  metrics-enabled: "true"
  tracing-enabled: "true"

---
apiVersion: v1
kind: Secret
metadata:
  name: api-versioning-secrets
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty
type: Opaque
data:
  # These should be base64 encoded in real deployments
  postgres-username: cG9zdGdyZXM=  # postgres
  postgres-password: cGFzc3dvcmQ=  # password
  jwt-secret-key: bXlfc2VjcmV0X2tleV9jaGFuZ2VfaW5fcHJvZHVjdGlvbg==  # my_secret_key_change_in_production

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-versioning-network-policy
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty
spec:
  podSelector:
    matchLabels:
      app: api-versioning-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: marty-framework
    - namespaceSelector:
        matchLabels:
          name: default
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8060
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow connection to PostgreSQL
  - to:
    - namespaceSelector:
        matchLabels:
          name: marty-framework
    ports:
    - protocol: TCP
      port: 5432
  # Allow connection to Redis
  - to:
    - namespaceSelector:
        matchLabels:
          name: marty-framework
    ports:
    - protocol: TCP
      port: 6379
  # Allow connection to Jaeger
  - to:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 14268

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-versioning-pdb
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: api-versioning-service

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-versioning-hpa
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-versioning-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
apiVersion: v1
kind: Service
metadata:
  name: api-versioning-headless
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 8060
    targetPort: 8060
    protocol: TCP
    name: http
  selector:
    app: api-versioning-service

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: api-versioning-service
  namespace: marty-framework
  labels:
    app: api-versioning-service
    component: infrastructure
    framework: marty
spec:
  selector:
    matchLabels:
      app: api-versioning-service
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s
