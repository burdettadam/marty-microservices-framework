# Marty Microservices Framework - Tool Configuration

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "marty-microservices-framework"
dynamic = ["version"]
description = "Enterprise-grade microservices framework with comprehensive CLI and templates"
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = [
    "microservices",
    "fastapi",
    "kubernetes",
    "service-discovery",
    "api-gateway",
    "saga-pattern",
    "configuration-management",
    "contract-testing",
    "distributed-systems",
    "enterprise-framework"
]
authors = [
    {name = "Marty Framework Team", email = "team@marty-framework.dev"},
]
maintainers = [
    {name = "Marty Framework Team", email = "team@marty-framework.dev"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Operating System :: OS Independent",
]
dependencies = [
    "jinja2>=3.1.6",
    "astroid>=2.15.0", # For additional code analysis
    "mypy>=1.0.0", # For static type checking
    "prometheus-client>=0.17.0", # For metrics collection
    "aiokafka>=0.8.0", # For Kafka event streaming
    "aiohttp>=3.8.0", # For HTTP load testing
    "grpcio>=1.50.0", # For gRPC load testing
    "pydantic>=2.0.0", # For data validation
    "httpx>=0.28.1",
    "grpcio-tools>=1.75.1",
    "protobuf>=6.32.1",
    "aiofiles>=24.1.0",
    "pydantic-settings>=2.11.0",
    "structlog>=25.4.0",
    "python-json-logger>=4.0.0",
    "tenacity>=9.1.2",
    # CLI dependencies
    "click>=8.1.0",
    "rich>=13.7.0",
    "cookiecutter>=2.5.0",
    "toml>=0.10.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-benchmark>=4.0.0",
    "pytest-html>=4.1.1",
    "playwright>=1.40.0",
    "pytest-playwright>=0.4.3",
    "psutil>=5.9.0",
    "matplotlib>=3.7.0",
    "pandas>=2.0.0",
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "pre-commit>=3.6.0",
    # Testing for microservices
    "pytest-mock>=3.12.0",
    "faker>=20.1.0",
    "locust>=2.17.0",
]

cli = [
    "click>=8.1.0",
    "rich>=13.7.0",
    "jinja2>=3.1.0",
    "cookiecutter>=2.5.0",
    "toml>=0.10.0",
    "requests>=2.31.0",
    "pyyaml>=6.0.0",
]

microservices = [
    # Core web framework
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",

    # Database drivers
    "asyncpg>=0.29.0",
    "motor>=3.3.0",
    "redis>=5.0.0",

    # Service discovery
    "python-consul>=1.1.0",
    "etcd3>=0.12.0",
    "kubernetes>=28.1.0",

    # Authentication and security
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.6",
    "cryptography>=41.0.0",

    # API versioning and contract testing
    "jsonschema>=4.20.0",
    "deepdiff>=6.7.0",
    "python-semver>=3.0.0",

    # Monitoring
    "opentelemetry-api>=1.21.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.42b0",
    "opentelemetry-exporter-jaeger>=1.21.0",
]

cloud = [
    "boto3>=1.34.0",
    "azure-storage-blob>=12.19.0",
    "google-cloud-storage>=2.10.0",
]

all = [
    "marty-microservices-framework[dev,cli,microservices,cloud]"
]

[project.urls]
Homepage = "https://github.com/marty-framework/marty-microservices-framework"
Documentation = "https://marty-framework.github.io/docs"
Repository = "https://github.com/marty-framework/marty-microservices-framework"
"Bug Reports" = "https://github.com/marty-framework/marty-microservices-framework/issues"
Changelog = "https://github.com/marty-framework/marty-microservices-framework/blob/main/CHANGELOG.md"

[project.scripts]
marty = "marty_cli:cli"
marty-msf = "marty_cli:cli"

# Hatchling build configuration
[tool.hatch.version]
path = "marty_cli/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "marty_cli/",
    "templates/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "/src",
    "/scripts",
    "/examples",
    "/config",
]

[tool.hatch.build.targets.wheel]
packages = ["marty_cli", "templates", "src/framework"]

# Marty Microservices Framework - Ruff Configuration
[tool.ruff]
line-length = 88
target-version = "py310"
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "__pycache__",
    "microservice_project_template/.venv",
    "build",
    "dist",
]

# Enable specific rule sets
select = [
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "B",    # flake8-bugbear
    "I",    # isort
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "PT",   # flake8-pytest-style
    "RUF",  # ruff-specific rules
]

ignore = [
    "E501",  # line too long (handled by black)
]

[tool.ruff.isort]
known-first-party = ["scripts"]
combine-as-imports = true

[tool.ruff.per-file-ignores]
"scripts/*" = ["T201"]  # Allow print statements in scripts
"microservice_project_template/**" = ["ALL"]  # Ignore project template

[dependency-groups]
dev = [
    "jinja2>=3.1.6",
    "mypy>=1.18.2",
]
