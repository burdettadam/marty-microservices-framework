# Zero-Trust Network Policies for Kubernetes
# These policies implement micro-segmentation and default-deny networking

apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/policy-type: default-deny
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-egress
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: frontend-tier-policy
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/tier: frontend
spec:
  podSelector:
    matchLabels:
      marty.io/tier: frontend
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 15000  # Envoy admin
  egress:
  - to:
    - podSelector:
        matchLabels:
          marty.io/tier: business
    ports:
    - protocol: TCP
      port: 8080
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: istio-system

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: business-tier-policy
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/tier: business
spec:
  podSelector:
    matchLabels:
      marty.io/tier: business
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          marty.io/tier: frontend
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - podSelector:
        matchLabels:
          marty.io/tier: business
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 15000
  egress:
  - to:
    - podSelector:
        matchLabels:
          marty.io/tier: business
    ports:
    - protocol: TCP
      port: 8080
  - to:
    - podSelector:
        matchLabels:
          marty.io/tier: data
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: istio-system

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: payment-tier-policy
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/tier: payment
    marty.io/security-level: restricted
spec:
  podSelector:
    matchLabels:
      marty.io/tier: payment
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: user-service
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 15000
  egress:
  - to:
    - podSelector:
        matchLabels:
          marty.io/tier: data
          app: payment-db
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector:
        matchLabels:
          name: istio-system
  # Restricted external access - only specific payment gateways
  - to: []
    ports:
    - protocol: TCP
      port: 443
    # Additional selector for payment gateway IPs would be configured here

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: data-tier-policy
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/tier: data
spec:
  podSelector:
    matchLabels:
      marty.io/tier: data
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          marty.io/tier: business
    ports:
    - protocol: TCP
      port: 5432
    - protocol: TCP
      port: 6379
  - from:
    - podSelector:
        matchLabels:
          marty.io/tier: payment
          app: payment-service
    ports:
    - protocol: TCP
      port: 5432
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
  # Backup and monitoring access
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    - namespaceSelector:
        matchLabels:
          name: backup
  egress:
  # DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  # Database replication (if needed)
  - to: []
    ports:
    - protocol: TCP
      port: 5432
  # Monitoring and telemetry
  - to:
    - namespaceSelector:
        matchLabels:
          name: istio-system

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: observability-policy
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/component: observability
spec:
  podSelector:
    matchLabels:
      marty.io/component: observability
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow access from all application tiers for metrics collection
  - from:
    - podSelector: {}
    ports:
    - protocol: TCP
      port: 9090  # Prometheus metrics
    - protocol: TCP
      port: 14268  # Jaeger traces
    - protocol: TCP
      port: 5044  # Logstash
  # Allow access from Istio system
  - from:
    - namespaceSelector:
        matchLabels:
          name: istio-system
  egress:
  # DNS resolution
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: UDP
      port: 53
  # External log aggregation (if needed)
  - to: []
    ports:
    - protocol: TCP
      port: 443

---
# Network policy for inter-namespace communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cross-namespace-policy
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow communication from staging for testing
  - from:
    - namespaceSelector:
        matchLabels:
          name: staging
          marty.io/environment: staging
    - podSelector:
        matchLabels:
          marty.io/component: test-runner
  # Allow monitoring from dedicated namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
  egress:
  # Allow access to shared services
  - to:
    - namespaceSelector:
        matchLabels:
          name: shared-services
    ports:
    - protocol: TCP
      port: 8080

---
# Emergency break-glass policy (disabled by default)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: emergency-access
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/emergency: "true"
    marty.io/enabled: "false"  # Disabled by default
spec:
  podSelector:
    matchLabels:
      marty.io/emergency-access: "enabled"
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          marty.io/role: emergency-admin
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 22   # SSH for emergency access
  egress:
  - to: []  # Allow all egress for emergency operations
