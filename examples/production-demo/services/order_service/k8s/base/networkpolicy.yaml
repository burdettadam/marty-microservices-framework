apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: order-service
  labels:
    app.kubernetes.io/name: order-service
    app.kubernetes.io/component: api
    app.kubernetes.io/part-of: order-service
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: order-service
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow traffic from other microservices in the same namespace
    - from:
        - namespaceSelector:
            matchLabels:
              name: default
        - podSelector:
            matchLabels:
              app.kubernetes.io/part-of: order-service
      ports:
        - protocol: TCP
          port: 50051  # gRPC
        - protocol: TCP
          port: 8080   # HTTP health checks
    # Allow traffic from service mesh (Istio/Linkerd)
    - from:
        - namespaceSelector:
            matchLabels:
              name: istio-system
    - from:
        - namespaceSelector:
            matchLabels:
              linkerd.io/control-plane-ns: linkerd
    # Allow traffic from monitoring namespace
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 9000   # Metrics
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # Allow HTTPS outbound (for external APIs)
    - to: []
      ports:
        - protocol: TCP
          port: 443
    # Allow communication with other microservices
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/part-of: order-service
      ports:
        - protocol: TCP
          port: 50051
    # Allow communication with databases (adjust ports as needed)
    - to:
        - podSelector:
            matchLabels:
              app: postgresql
      ports:
        - protocol: TCP
          port: 5432
