apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  labels:
    app.kubernetes.io/name: grafana
    grafana_dashboard: "1"
Data:
  microservice-dashboard.json: |
    {
      "annotations": {
        "list": []
      },
      "panels": [
        {
          "type": "graph",
          "title": "gRPC Request Rate",
          "targets": [
            {
              "expr": "sum(rate(grpc_server_requests_total[5m]))",
              "legendFormat": "{{method}}"
            }
          ]
        },
        {
          "type": "graph",
          "title": "Request Latency",
          "targets": [
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_server_handling_seconds_bucket[5m])) by (le))",
              "legendFormat": "p95"
            }
          ]
        }
      ],
      "schemaVersion": 38,
      "version": 1
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:10.3.1
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-admin
                  key: password
          ports:
            - name: http
              containerPort: 3000
          volumeMounts:
            - name: dashboards
              mountPath: /var/lib/grafana/dashboards
            - name: provisioning
              mountPath: /etc/grafana/provisioning/dashboards
      volumes:
        - name: dashboards
          configMap:
            name: grafana-dashboards
        - name: provisioning
          configMap:
            name: grafana-provisioning
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-provisioning
  labels:
    app.kubernetes.io/name: grafana
Data:
  dashboards.yml: |
    apiVersion: 1
    providers:
      - name: 'default'
        orgId: 1
        folder: 'Default'
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards
---
apiVersion: v1
kind: Secret
metadata:
  name: grafana-admin
  labels:
    app.kubernetes.io/name: grafana
stringData:
  password: admin
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app.kubernetes.io/name: grafana
spec:
  selector:
    app.kubernetes.io/name: grafana
  ports:
    - name: http
      port: 3000
      targetPort: http
