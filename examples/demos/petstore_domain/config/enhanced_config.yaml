# Enhanced Petstore Domain Configuration
# Showcases MMF centralized configuration and feature flags

service:
  name: "petstore-domain-enhanced"
  version: "1.0.0"
  description: "Enhanced petstore domain service with MMF capabilities"
  port: 8080
  max_orders_per_customer: 10

# Feature Flags for Demo
feature_flags:
  pet_personalization: false
  premium_filters: true
  express_order_processing: true
  payment_processing: true
  real_time_order_updates: false
  redis_caching: true
  database_integration: true

# Pricing Configuration
pricing:
  display_currency: "USD"
  markup_percentage: 0.0
  discount_enabled: true
  tax_rate: 0.08

# Observability Settings
observability:
  tracing_enabled: true
  metrics_enabled: true
  jaeger_endpoint: "http://jaeger.observability.svc.cluster.local:14268/api/traces"
  prometheus_endpoint: "http://prometheus.observability.svc.cluster.local:9090"
  log_level: "INFO"
  correlation_tracking: true

# Security Configuration
security:
  jwt_enabled: true
  jwt_secret: "demo-secret-key"
  rate_limiting_enabled: true
  default_rate_limit: 100  # requests per minute
  authentication_required: false  # Demo mode
  cors_enabled: true

# Event Streaming Configuration
event_streaming:
  kafka_enabled: true
  kafka_brokers: ["kafka.observability.svc.cluster.local:9092"]
  saga_enabled: true

# Extended Messaging Configuration
extended_messaging:
  enabled: true

  # NATS Configuration
  nats:
    enabled: true
    servers: ["nats://nats.messaging.svc.cluster.local:4222"]
    jetstream_enabled: true
    stream_config:
      max_msgs: 10000
      max_bytes: 1048576  # 1MB
      retention: "workqueue"
    connection_timeout: 30
    request_timeout: 10

  # AWS SNS Configuration
  aws_sns:
    enabled: false  # Disabled by default for local dev
    region_name: "us-east-1"
    fifo_topics: true
    credentials:
      # Use environment variables or IAM roles in production
      aws_access_key_id: "${AWS_ACCESS_KEY_ID}"
      aws_secret_access_key: "${AWS_SECRET_ACCESS_KEY}"
    topic_prefix: "petstore"

  # Backend Selection Strategy
  backend_selection:
    default_backend: "nats"
    pattern_preferences:
      pub_sub: "nats"          # NATS for pub/sub patterns
      point_to_point: "nats"   # NATS for direct messaging
      request_response: "nats" # NATS for request/response
      streaming: "kafka"       # Kafka for streaming (existing)
    fallback_backend: "kafka"   # Fallback to existing Kafka

  # Message Patterns Configuration
  patterns:
    inventory_events:
      pattern: "pub_sub"
      backend: "nats"
      retention_days: 7

    order_events:
      pattern: "streaming"
      backend: "kafka"
      retention_days: 30

    customer_notifications:
      pattern: "pub_sub"
      backend: "nats"
      retention_days: 3

    payment_commands:
      pattern: "point_to_point"
      backend: "nats"
      timeout_seconds: 30

    analytics_stream:
      pattern: "streaming"
      backend: "kafka"
      retention_days: 90
  event_store_enabled: true
  topic_prefix: "petstore"

# Resilience Configuration
resilience:
  circuit_breaker_enabled: true
  retry_enabled: true
  timeout_enabled: true
  default_timeout_seconds: 30
  max_retry_attempts: 3
  circuit_breaker_failure_threshold: 5

  # Timeout configurations for different dependency types
  timeouts:
    default_timeout: 30.0
    database_timeout: 10.0
    api_call_timeout: 15.0
    message_queue_timeout: 5.0
    cache_timeout: 2.0
    file_operation_timeout: 30.0
    circuit_breaker_timeout: 60.0

  # Bulkhead configurations for resource isolation
  bulkheads:
    # Database operations
    database:
      max_concurrent: 10
      timeout_seconds: 15.0
      bulkhead_type: "semaphore"
      reject_on_full: false
      enable_circuit_breaker: true
      circuit_breaker_failure_threshold: 5
      circuit_breaker_timeout: 60.0

    # External API calls (payment gateway, notification service)
    external_api:
      max_concurrent: 8
      timeout_seconds: 20.0
      bulkhead_type: "semaphore"
      reject_on_full: true
      enable_circuit_breaker: true
      circuit_breaker_failure_threshold: 3
      circuit_breaker_timeout: 90.0

    # Cache operations (Redis)
    cache:
      max_concurrent: 50
      timeout_seconds: 2.0
      bulkhead_type: "semaphore"
      reject_on_full: true
      enable_circuit_breaker: false

    # Message queue operations (Kafka)
    message_queue:
      max_concurrent: 15
      timeout_seconds: 10.0
      bulkhead_type: "semaphore"
      reject_on_full: false
      enable_circuit_breaker: true
      circuit_breaker_failure_threshold: 5
      circuit_breaker_timeout: 60.0

    # File operations (image processing, ML model)
    file_system:
      max_concurrent: 4
      timeout_seconds: 45.0
      bulkhead_type: "thread_pool"
      reject_on_full: true
      enable_circuit_breaker: false

  # External dependency specific configurations
  external_dependencies:
    # Database connections
    petstore_database:
      type: "database"
      max_concurrent: 10
      timeout_seconds: 10.0
      enable_circuit_breaker: true

    # Payment gateway
    payment_gateway:
      type: "external_api"
      max_concurrent: 5  # Limited for payment operations
      timeout_seconds: 25.0
      enable_circuit_breaker: true
      circuit_breaker_failure_threshold: 3

    # Redis cache
    redis_cache:
      type: "cache"
      max_concurrent: 100
      timeout_seconds: 1.5
      enable_circuit_breaker: false

    # Kafka message bus
    kafka_events:
      type: "message_queue"
      max_concurrent: 20
      timeout_seconds: 8.0
      enable_circuit_breaker: true

    # ML Pet Advisor service
    ml_pet_advisor:
      type: "external_api"
      max_concurrent: 6
      timeout_seconds: 30.0
      enable_circuit_breaker: true
      circuit_breaker_failure_threshold: 4

# Data Sources
data_sources:
  redis:
    enabled: true
    host: "redis.observability.svc.cluster.local"
    port: 6379
    db: 0
    ttl_seconds: 300
  database:
    enabled: true
    type: "postgresql"
    host: "postgres.petstore.svc.cluster.local"
    port: 5432
    database: "petstore"
    username: "petstore_user"
    password: "demo_password"

# Cache Configuration
cache:
  pet_catalog_ttl: 600  # 10 minutes
  user_data_ttl: 300    # 5 minutes
  order_status_ttl: 60  # 1 minute
  config_ttl: 3600      # 1 hour
