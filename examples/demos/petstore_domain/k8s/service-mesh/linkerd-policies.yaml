---
# Service Profile for Petstore Domain with Circuit Breaker and Retry
apiVersion: linkerd.io/v1alpha2
kind: ServiceProfile
metadata:
  name: petstore-domain-service.petstore-domain.svc.cluster.local
  namespace: petstore-domain
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: circuit-breaker
    marty.io/service: petstore-domain
spec:
  routes:
  # Health endpoints
  - name: health
    condition:
      method: GET
      pathRegex: "/(health|ready)"
    retryBudget:
      retryRatio: 0.1
      minRetriesPerSecond: 2
      ttl: 10s
    responseClasses:
    - condition:
        status:
          min: 200
          max: 299
      isFailure: false
    - condition:
        status:
          min: 500
          max: 599
      isFailure: true
  # API endpoints
  - name: api
    condition:
      method: POST
      pathRegex: "/api/petstore-domain/.*"
    retryBudget:
      retryRatio: 0.2
      minRetriesPerSecond: 5
      ttl: 10s
    timeout: 30s
    responseClasses:
    - condition:
        status:
          min: 200
          max: 299
      isFailure: false
    - condition:
        status:
          min: 400
          max: 499
      isFailure: false  # Client errors shouldn't be retried
    - condition:
        status:
          min: 500
          max: 599
      isFailure: true
  - name: api-get
    condition:
      method: GET
      pathRegex: "/api/petstore-domain/.*"
    retryBudget:
      retryRatio: 0.3
      minRetriesPerSecond: 10
      ttl: 5s
    timeout: 15s
    responseClasses:
    - condition:
        status:
          min: 200
          max: 299
      isFailure: false
    - condition:
        status:
          min: 500
          max: 599
      isFailure: true
  # Metrics endpoint
  - name: metrics
    condition:
      method: GET
      pathRegex: "/metrics"
    retryBudget:
      retryRatio: 0.1
      minRetriesPerSecond: 1
      ttl: 5s
    timeout: 10s
---
# TrafficSplit for Canary Deployments
apiVersion: split.smi-spec.io/v1alpha1
kind: TrafficSplit
metadata:
  name: petstore-domain-split
  namespace: petstore-domain
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: traffic-management
    marty.io/service: petstore-domain
spec:
  service: petstore-domain-service
  backends:
  - service: petstore-domain-service-v1
    weight: 100
  # Future versions can be added here
  # - service: petstore-domain-service-v2
  #   weight: 0
---
# HTTPRouteGroup for API Access Control
apiVersion: specs.smi-spec.io/v1alpha1
kind: HTTPRouteGroup
metadata:
  name: petstore-domain-routes
  namespace: petstore-domain
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: access-control
    marty.io/service: petstore-domain
spec:
  matches:
  - name: health
    pathRegex: "/(health|ready)"
    methods:
    - GET
  - name: api-read
    pathRegex: "/api/petstore-domain/.*"
    methods:
    - GET
    - HEAD
  - name: api-write
    pathRegex: "/api/petstore-domain/.*"
    methods:
    - POST
    - PUT
    - PATCH
    - DELETE
  - name: metrics
    pathRegex: "/metrics"
    methods:
    - GET
---
# TrafficTarget for Access Control
apiVersion: access.smi-spec.io/v1alpha1
kind: TrafficTarget
metadata:
  name: petstore-domain-access
  namespace: petstore-domain
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: access-control
    marty.io/service: petstore-domain
spec:
  destination:
    kind: ServiceAccount
    name: petstore-domain
    namespace: petstore-domain
  rules:
  # Allow health checks from any service
  - kind: HTTPRouteGroup
    name: petstore-domain-routes
    matches:
    - health
  # Allow metrics access from monitoring
  - kind: HTTPRouteGroup
    name: petstore-domain-routes
    matches:
    - metrics
  sources:
  # Allow other services in the namespace
  - kind: ServiceAccount
    name: "*"
    namespace: petstore-domain
  # Allow monitoring namespace
  - kind: ServiceAccount
    name: "*"
    namespace: linkerd-viz
---
# Additional TrafficTarget for API Access
apiVersion: access.smi-spec.io/v1alpha1
kind: TrafficTarget
metadata:
  name: petstore-domain-api-access
  namespace: petstore-domain
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: access-control
    marty.io/service: petstore-domain
spec:
  destination:
    kind: ServiceAccount
    name: petstore-domain
    namespace: petstore-domain
  rules:
  # Allow read access
  - kind: HTTPRouteGroup
    name: petstore-domain-routes
    matches:
    - api-read
  # Allow write access (more restrictive)
  - kind: HTTPRouteGroup
    name: petstore-domain-routes
    matches:
    - api-write
  sources:
  # Frontend services
  - kind: ServiceAccount
    name: petstore-frontend
    namespace: petstore-domain
  # API gateway
  - kind: ServiceAccount
    name: api-gateway
    namespace: petstore-domain
  # Other authorized services
  - kind: ServiceAccount
    name: petstore-api
    namespace: petstore-domain
---
# Server authorization for mTLS
apiVersion: policy.linkerd.io/v1beta1
kind: Server
metadata:
  name: petstore-domain-server
  namespace: petstore-domain
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: security
    marty.io/service: petstore-domain
spec:
  podSelector:
    matchLabels:
      app: petstore-domain
  port: 8080
  proxyProtocol: "HTTP/2"
---
# ServerAuthorization for petstore domain
apiVersion: policy.linkerd.io/v1beta1
kind: ServerAuthorization
metadata:
  name: petstore-domain-server-authz
  namespace: petstore-domain
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: security
    marty.io/service: petstore-domain
spec:
  server:
    name: petstore-domain-server
  requiredAuthentication:
    policy: unauthenticated  # Change to 'required' for strict mTLS
  client:
    meshTLS:
      unauthenticated: {}
    # For strict authentication, use:
    # meshTLS:
    #   serviceAccounts:
    #   - name: petstore-frontend
    #     namespace: petstore-domain
---
# NetworkPolicy for additional security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: petstore-domain-netpol
  namespace: petstore-domain
  labels:
    app.kubernetes.io/managed-by: marty-msf
    marty.io/policy-type: security
    marty.io/service: petstore-domain
spec:
  podSelector:
    matchLabels:
      app: petstore-domain
  policyTypes:
  - Ingress
  - Egress
  ingress:
  # Allow linkerd control plane
  - from:
    - namespaceSelector:
        matchLabels:
          name: linkerd
    ports:
    - protocol: TCP
      port: 4143  # linkerd-proxy admin port
  # Allow same namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: petstore-domain
    ports:
    - protocol: TCP
      port: 8080
  # Allow monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: linkerd-viz
    ports:
    - protocol: TCP
      port: 8080
  egress:
  # Allow DNS
  - to: []
    ports:
    - protocol: UDP
      port: 53
  # Allow linkerd control plane
  - to:
    - namespaceSelector:
        matchLabels:
          name: linkerd
    ports:
    - protocol: TCP
      port: 8443
  # Allow external APIs if needed
  - to: []
    ports:
    - protocol: TCP
      port: 443
