# Istio Security Policies for Zero-Trust Architecture
# These policies enforce strict mTLS and fine-grained authorization

# Global strict mTLS policy
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: default-mtls-strict
  namespace: istio-system
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  mtls:
    mode: STRICT

---
# Default deny-all authorization policy
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: default-deny-all
  namespace: istio-system
  labels:
    app.kubernetes.io/managed-by: marty-security
spec: {}  # Empty spec denies all access

---
# Allow Istio system components
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: istio-system-allow
  namespace: istio-system
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        namespaces: ["istio-system"]

---
# Allow health checks
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: health-check-allow
  namespace: istio-system
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  action: ALLOW
  rules:
  - to:
    - operation:
        paths: ["/health", "/ready", "/live", "/metrics"]

---
# Allow observability components
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: observability-allow
  namespace: istio-system
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        principals:
        - "cluster.local/ns/istio-system/sa/prometheus"
        - "cluster.local/ns/istio-system/sa/grafana"
        - "cluster.local/ns/istio-system/sa/jaeger"
        - "cluster.local/ns/monitoring/sa/prometheus"

---
# API Gateway authorization
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: api-gateway-authorization
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  selector:
    matchLabels:
      app: api-gateway
  action: ALLOW
  rules:
  # Allow from ingress gateway
  - from:
    - source:
        principals: ["cluster.local/ns/istio-system/sa/istio-ingressgateway"]
  # Allow health checks
  - to:
    - operation:
        paths: ["/health", "/metrics"]

---
# User service authorization
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: user-service-authorization
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  selector:
    matchLabels:
      app: user-service
  action: ALLOW
  rules:
  # Allow from API gateway
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/api-gateway"]
    to:
    - operation:
        methods: ["GET", "POST", "PUT"]
        paths: ["/api/v1/users/*", "/api/v1/auth/*"]
  # Allow internal service communication
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/order-service"]
    to:
    - operation:
        methods: ["GET"]
        paths: ["/api/v1/users/*/profile"]

---
# Payment service authorization (high security)
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: payment-service-authorization
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/security-level: restricted
spec:
  selector:
    matchLabels:
      app: payment-service
  action: ALLOW
  rules:
  # Only allow from user service
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/user-service"]
    to:
    - operation:
        methods: ["POST"]
        paths: ["/api/v1/payments/*"]
  # Allow order service to update payment status
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/order-service"]
    to:
    - operation:
        methods: ["PUT"]
        paths: ["/api/v1/payments/*/status"]

---
# Order service authorization
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: order-service-authorization
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  selector:
    matchLabels:
      app: order-service
  action: ALLOW
  rules:
  # Allow from user service
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/user-service"]
    to:
    - operation:
        methods: ["GET", "POST"]
        paths: ["/api/v1/orders/*"]
  # Allow from payment service
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/payment-service"]
    to:
    - operation:
        methods: ["PUT"]
        paths: ["/api/v1/orders/*/payment-status"]

---
# Audit policy for sensitive operations
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: admin-operations-audit
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  action: AUDIT
  rules:
  - to:
    - operation:
        paths: ["/admin/*", "/api/v1/admin/*"]
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/admin-service"]

---
# Deny policy for deprecated endpoints
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: deprecated-endpoints-deny
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  action: DENY
  rules:
  - to:
    - operation:
        paths: ["/api/v0/*", "/legacy/*", "/deprecated/*"]

---
# Rate limiting policy for public APIs
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: public-api-rate-limit
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
spec:
  selector:
    matchLabels:
      app: api-gateway
  action: ALLOW
  rules:
  - to:
    - operation:
        paths: ["/api/v1/public/*"]
    when:
    - key: source.ip
      notValues: ["10.0.0.0/8", "192.168.0.0/16", "172.16.0.0/12"]  # Not internal IPs

---
# Database access authorization
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: database-access-authorization
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/component: database
spec:
  selector:
    matchLabels:
      marty.io/tier: data
  action: ALLOW
  rules:
  # User service database access
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/user-service"]
    to:
    - operation:
        ports: ["5432"]
    when:
    - key: destination.labels[app]
      values: ["user-db"]
  # Payment service database access
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/payment-service"]
    to:
    - operation:
        ports: ["5432"]
    when:
    - key: destination.labels[app]
      values: ["payment-db"]
  # Order service database access
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/order-service"]
    to:
    - operation:
        ports: ["5432"]
    when:
    - key: destination.labels[app]
      values: ["order-db"]

---
# Emergency break-glass authorization (disabled by default)
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: emergency-break-glass
  namespace: production
  labels:
    app.kubernetes.io/managed-by: marty-security
    marty.io/emergency: "true"
    marty.io/enabled: "false"  # Disabled by default
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        principals: ["cluster.local/ns/production/sa/emergency-admin"]
  - when:
    - key: request.headers[x-emergency-access]
      values: ["enabled"]
