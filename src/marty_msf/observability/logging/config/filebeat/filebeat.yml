# Filebeat Configuration for Marty Microservices Framework
# Collects logs from containers and sends to Logstash

filebeat.inputs:
# Docker container logs
- type: container
  enabled: true
  paths:
    - '/var/lib/docker/containers/*/*.log'

  # Container-specific processing
  processors:
    - add_docker_metadata:
        host: "unix:///var/run/docker.sock"
    - decode_json_fields:
        fields: ["message"]
        target: ""
        overwrite_keys: true
        when:
          regexp:
            message: '^{.*}$'

  # Include/exclude containers
  include_lines:
    - '.*'
  exclude_lines:
    - '^DEBUG'

  # Multiline patterns for stack traces
  multiline.pattern: '^\s+'
  multiline.negate: false
  multiline.match: after
  multiline.timeout: 5s

  # Fields enhancement
  fields:
    log_type: "container"
    environment: "${ENVIRONMENT:production}"
  fields_under_root: true

# System logs
- type: log
  enabled: true
  paths:
    - /host/var/log/syslog
    - /host/var/log/auth.log
    - /host/var/log/daemon.log
  fields:
    log_type: "system"
  fields_under_root: true

# Kubernetes logs (if running in Kubernetes)
- type: log
  enabled: true
  paths:
    - /var/log/containers/*.log
  processors:
    - add_kubernetes_metadata:
        host: ${NODE_NAME}
        matchers:
        - logs_path:
            logs_path: "/var/log/containers/"
  fields:
    log_type: "kubernetes"
  fields_under_root: true

# Application-specific log files
- type: log
  enabled: true
  paths:
    - /host/var/log/marty/*.log
    - /app/logs/*.log
  fields:
    log_type: "application"
  fields_under_root: true

# Processors for all inputs
processors:
  # Add hostname
  - add_host_metadata:
      when.not.contains.tags: forwarded

  # Add timestamp
  - timestamp:
      field: "@timestamp"
      layouts:
        - '2006-01-02T15:04:05.000Z'
        - '2006-01-02T15:04:05Z'
      test:
        - '2023-12-01T12:34:56.789Z'

  # Drop empty events
  - drop_event:
      when:
        equals:
          message: ""

  # Rate limiting
  - rate_limit:
      limit: "10000/m"

# Output configuration
output.logstash:
  hosts: ["${LOGSTASH_HOSTS:logstash:5044}"]

  # Load balancing
  loadbalance: true

  # Connection settings
  timeout: 30s
  max_retries: 3
  backoff.init: 1s
  backoff.max: 60s

# Alternative Elasticsearch output (commented out)
# output.elasticsearch:
#   hosts: ["${ELASTICSEARCH_HOSTS:elasticsearch:9200}"]
#   index: "filebeat-%{+yyyy.MM.dd}"
#   template.name: "filebeat"
#   template.pattern: "filebeat-*"

# Logging configuration
logging.level: info
logging.to_files: true
logging.files:
  path: /usr/share/filebeat/logs
  name: filebeat
  keepfiles: 7
  permissions: 0644

# Monitoring
monitoring.enabled: true
monitoring.elasticsearch:
  hosts: ["${ELASTICSEARCH_HOSTS:elasticsearch:9200}"]

# Registry for tracking file positions
filebeat.registry.path: /usr/share/filebeat/data/registry

# HTTP endpoint for health checks
http.enabled: true
http.host: 0.0.0.0
http.port: 5066

# Performance tuning
queue.mem:
  events: 4096
  flush.min_events: 512
  flush.timeout: 5s

# SSL/TLS settings (if needed)
# output.logstash:
#   ssl.verification_mode: none
#   ssl.certificate_authorities: ["/etc/ssl/certs/ca-certificates.crt"]
